{
  "name": "mytonwallet",
  "version": "4.0.2",
  "description": "The most feature-rich web wallet and browser extension for TON â€“ with support of multi-accounts, tokens (jettons), NFT, TON DNS, TON Sites, TON Proxy, and TON Magic.",
  "main": "index.js",
  "scripts": {
    "dev": "cross-env APP_ENV=development webpack serve --mode development",
    "build": "webpack && bash ./deploy/copy_to_dist.sh",
    "build:dev": "APP_ENV=development webpack --mode development && bash ./deploy/copy_to_dist.sh",
    "build:staging": "cross-env APP_ENV=staging npm run build",
    "build:production": "npm run build",
    "core:dev": "cross-env IS_CORE_WALLET=1 npm run dev",
    "core:build": "cross-env IS_CORE_WALLET=1 npm run build",
    "core:build:dev": "cross-env IS_CORE_WALLET=1 npm run build:dev",
    "core:build:staging": "cross-env IS_CORE_WALLET=1 npm run build:staging",
    "core:build:production": "cross-env IS_CORE_WALLET=1 npm run build:production",
    "core:extension:dev": "cross-env IS_CORE_WALLET=1 npm run extension:dev",
    "core:extension-chrome:package": "cross-env IS_CORE_WALLET=1 npm run extension-chrome:package",
    "core:extension-chrome:package:staging": "cross-env IS_CORE_WALLET=1 npm run extension-chrome:package:staging",
    "core:extension-chrome:package:production": "cross-env IS_CORE_WALLET=1 npm run extension-chrome:package:production",
    "extension:dev": "cross-env IS_EXTENSION=1 npm run build:dev",
    "extension-chrome:package": "cross-env IS_EXTENSION=1 webpack && bash ./deploy/package_extension.sh chrome",
    "extension-chrome:package:staging": "APP_ENV=staging npm run extension-chrome:package",
    "extension-chrome:package:production": "npm run extension-chrome:package",
    "extension-firefox:package": "cross-env IS_FIREFOX_EXTENSION=1 IS_EXTENSION=1 webpack && bash ./deploy/package_extension.sh firefox",
    "extension-firefox:package:staging": "cross-env APP_ENV=staging npm run extension-firefox:package",
    "extension-firefox:package:production": "npm run extension-firefox:package",
    "extension-opera:package": "cross-env IS_OPERA_EXTENSION=1 IS_EXTENSION=1 webpack && bash ./deploy/package_extension.sh opera",
    "extension-opera:package:staging": "cross-env APP_ENV=staging npm run extension-opera:package",
    "extension-opera:package:production": "npm run extension-opera:package",
    "electron:dev": "npm run electron:webpack && IS_PACKAGED_ELECTRON=1 concurrently --ks SIGKILL -n main,renderer,electron \"npm run electron:webpack -- --watch\" \"npm run dev\" \"electronmon dist/electron\"",
    "electron:webpack": "cross-env APP_ENV=$ENV webpack --config ./webpack-electron.config.ts",
    "electron:build": "IS_PACKAGED_ELECTRON=1 npm run build:$ENV && electron-builder install-app-deps && ENV=$ENV npm run electron:webpack",
    "electron:package": "npm run electron:build && npx rimraf dist-electron && electron-builder build --win --mac --linux --config src/electron/config.yml",
    "electron:package:staging": "ENV=staging npm run electron:package -- -p never",
    "electron:release:production": "ENV=production npm run electron:package -- -p always",
    "telegram:dev": "cross-env IS_TELEGRAM_APP=1 npm run dev",
    "telegram:build": "IS_TELEGRAM_APP=1 npm run build",
    "telegram:build:dev": "cross-env APP_ENV=development npm run telegram:build",
    "telegram:build:staging": "cross-env APP_ENV=staging npm run telegram:build",
    "telegram:build:production": "npm run telegram:build",
    "mobile:build": "IS_CAPACITOR=1 npm run build && cap sync",
    "mobile:build:dev": "cross-env APP_ENV=development npm run mobile:build",
    "mobile:build:staging": "cross-env APP_ENV=staging npm run mobile:build",
    "mobile:build:production": "npm run mobile:build",
    "mobile:run:android": "npm run mobile:build:dev && cap run android",
    "mobile:run:ios": "npm run mobile:build:dev && cap run ios",
    "build:icons": "fantasticon",
    "check": "tsc && stylelint \"**/*.{css,scss}\" && eslint .",
    "check:fix": "stylelint \"**/*.{css,scss}\" --fix && eslint . --fix",
    "test": "cross-env APP_ENV=test jest --verbose --forceExit",
    "test:playwright": "playwright test",
    "test:record": "playwright codegen localhost:1235",
    "prepare": "husky",
    "statoscope:validate-diff": "statoscope validate --input input.json --reference reference.json",
    "postversion": "./deploy/postversion.sh",
    "giveaways:build": "webpack --config ./webpack-giveaways.config.ts && bash ./deploy/copy_to_dist.sh dist-giveaways",
    "giveaways:build:dev": "APP_ENV=development webpack --mode development --config ./webpack-giveaways.config.ts",
    "giveaways:dev": "APP_ENV=development webpack serve --mode development --config ./webpack-giveaways.config.ts",
    "multisend:build": "webpack --config webpack-multisend.config.ts && bash ./deploy/copy_to_dist.sh dist-multisend src/multisend/public",
    "multisend:build:dev": "APP_ENV=development webpack --mode development --config webpack-multisend.config.ts",
    "multisend:dev": "APP_ENV=development webpack serve --mode development --config webpack-multisend.config.ts",
    "push:build": "IS_TELEGRAM_APP=1 webpack --config webpack-push.config.ts && bash ./deploy/copy_to_dist.sh dist-push src/push/public",
    "push:build:dev": "APP_ENV=development IS_TELEGRAM_APP=1 webpack --mode development --config webpack-push.config.ts",
    "push:dev": "APP_ENV=development IS_TELEGRAM_APP=1 webpack serve --mode development --config webpack-push.config.ts",
    "resolve-stacktrace": "node ./dev/resolveStackTrace.mjs",
    "i18n:build:default": "node ./dev/locales/buildDefault.js",
    "i18n:update": "node ./dev/locales/updateLocales.js",
    "i18n:find-missing": "node ./dev/locales/findMissingKeys.js"
  },
  "engines": {
    "node": "^22.6 || ^24",
    "npm": "^10.8 || ^11"
  },
  "husky": {
    "hooks": {
      "pre-commit": "tsc && lint-staged"
    }
  },
  "lint-staged": {
    "*.{ts,tsx,js}": "eslint --fix",
    "*.{css,scss}": "stylelint --fix"
  },
  "author": "MyTonWallet",
  "license": "GPL-3.0-or-later",
  "protocols": [
    {
      "name": "Ton",
      "schemes": [
        "ton"
      ]
    },
    {
      "name": "TonConnect",
      "schemes": [
        "tc",
        "mytonwallet-tc"
      ]
    },
    {
      "name": "MyTonWallet",
      "schemes": [
        "mtw"
      ]
    }
  ],
  "devDependencies": {
    "@babel/core": "7.27.1",
    "@babel/preset-env": "7.27.2",
    "@babel/preset-react": "7.27.1",
    "@babel/preset-typescript": "7.27.1",
    "@babel/register": "7.27.1",
    "@capacitor/cli": "7.2.0",
    "@mytonwallet/eslint-config": "github:mytonwallet-org/eslint-config#03e3491cf5ffd909041c53fa91bebd69a36ca3a8",
    "@mytonwallet/stylelint-whole-pixel": "github:mytonwallet-org/stylelint-whole-pixel#fd07e44d786460f7d469076b1d2cb1b05297896c",
    "@mytonwallet/webpack-watch-file-plugin": "github:mytonwallet-org/webpack-watch-file-plugin#747b7fd29da9a928aa8b63299adfba461d2f1231",
    "@playwright/test": "1.52.0",
    "@statoscope/cli": "5.29.0",
    "@statoscope/webpack-plugin": "5.29.0",
    "@stylistic/stylelint-plugin": "3.1.2",
    "@tonconnect/protocol": "2.3.0-beta.0",
    "@twa-dev/types": "8.0.2",
    "@twbs/fantasticon": "3.1.0",
    "@types/chrome": "0.0.323",
    "@types/create-hmac": "1.1.3",
    "@types/jest": "29.5.14",
    "@types/js-yaml": "4.0.9",
    "@types/node": "22.15.21",
    "@types/react": "19.1.5",
    "@types/react-dom": "19.1.5",
    "@types/sha256": "0.2.2",
    "@types/uuid": "10.0.0",
    "@types/webextension-polyfill": "0.12.3",
    "@types/webpack": "5.28.5",
    "@types/webpack-bundle-analyzer": "4.7.0",
    "@vue/preload-webpack-plugin": "2.0.0",
    "@webpack-cli/serve": "3.0.1",
    "autoprefixer": "10.4.21",
    "babel-loader": "10.0.0",
    "babel-plugin-transform-import-meta": "2.3.2",
    "browserlist": "1.0.1",
    "concurrently": "9.1.2",
    "copy-webpack-plugin": "13.0.0",
    "cross-env": "7.0.3",
    "css-loader": "7.1.2",
    "css-minimizer-webpack-plugin": "7.0.2",
    "dotenv": "16.5.0",
    "electron": "36.2.1",
    "electron-builder": "26.0.12",
    "electron-context-menu": "4.1.0",
    "electron-updater": "6.6.2",
    "electron-window-state": "5.0.3",
    "electronmon": "2.0.3",
    "eslint": "9.27.0",
    "git-revision-webpack-plugin": "5.0.0",
    "html-webpack-plugin": "5.6.3",
    "husky": "9.1.7",
    "jest": "29.7.0",
    "jest-environment-jsdom": "29.7.0",
    "jest-raw-loader": "1.0.1",
    "js-yaml": "4.1.0",
    "lint-staged": "16.0.0",
    "mini-css-extract-plugin": "2.9.2",
    "postcss": "8.5.3",
    "postcss-loader": "8.1.1",
    "postcss-modules": "6.0.1",
    "process": "0.11.10",
    "replace-in-file": "8.3.0",
    "sass": "1.89.0",
    "sass-loader": "16.0.5",
    "script-loader": "0.7.2",
    "serve": "14.2.4",
    "source-map": "0.7.4",
    "stylelint": "16.19.1",
    "stylelint-config-clean-order": "7.0.0",
    "stylelint-config-recommended-scss": "15.0.1",
    "stylelint-declaration-block-no-ignored-properties": "2.8.0",
    "stylelint-group-selectors": "1.0.10",
    "stylelint-high-performance-animation": "1.11.0",
    "stylelint-order": "7.0.0",
    "typescript": "5.8.3",
    "typescript-eslint": "8.32.1",
    "webpack": "5.99.9",
    "webpack-dev-server": "5.2.1"
  },
  "dependencies": {
    "@awesome-cordova-plugins/core": "6.16.0",
    "@awesome-cordova-plugins/in-app-browser": "6.16.0",
    "@capacitor-community/bluetooth-le": "github:mytonwallet-org/capacitor-bluetooth-le#f378a4b4e16562de6b5342b27ecf376193eb0ecc",
    "@capacitor-mlkit/barcode-scanning": "7.2.1",
    "@capacitor/android": "7.2.0",
    "@capacitor/app": "7.0.1",
    "@capacitor/app-launcher": "7.0.1",
    "@capacitor/clipboard": "7.0.1",
    "@capacitor/core": "7.2.0",
    "@capacitor/dialog": "file:mobile/plugins/native-dialog",
    "@capacitor/filesystem": "7.0.1",
    "@capacitor/haptics": "7.0.1",
    "@capacitor/ios": "7.2.0",
    "@capacitor/keyboard": "7.0.1",
    "@capacitor/push-notifications": "7.0.1",
    "@capacitor/share": "7.0.1",
    "@capacitor/splash-screen": "https://github.com/mytonwallet-org/capacitor-plugins/raw/1dfeb965cecefdd99eaebff28f48e1b0d75ea6b2/splash-screen/dist.tgz",
    "@capacitor/status-bar": "https://github.com/mytonwallet-org/capacitor-plugins/raw/1dfeb965cecefdd99eaebff28f48e1b0d75ea6b2/status-bar/dist.tgz",
    "@capgo/capacitor-native-biometric": "github:mytonwallet-org/capacitor-native-biometric#6adb20543f4521471ca361e3015baebec8b2ce76",
    "@capgo/native-audio": "7.1.2",
    "@ledgerhq/hw-transport-webhid": "6.30.0",
    "@ledgerhq/hw-transport-webusb": "6.29.4",
    "@mauricewegner/capacitor-navigation-bar": "github:mytonwallet-org/capacitor-navigation-bar#de401d4b096f4de1e634215666969c5450069885",
    "@mytonwallet/capacitor-usb-hid": "github:mytonwallet-org/capacitor-usb-hid#5c20260ee8b0e25fa140c37d42ecb75eea9b23cb",
    "@mytonwallet/native-bottom-sheet": "file:mobile/plugins/native-bottom-sheet",
    "@ton-community/ton-ledger": "7.2.0-pre.3",
    "@ton/core": "0.60.1",
    "@ton/ton": "15.2.1",
    "@tonconnect/sdk": "3.1.0",
    "@tonconnect/ui": "^2.2.0",
    "bip39": "3.1.0",
    "buffer": "6.0.3",
    "capacitor-native-settings": "7.0.1",
    "capacitor-plugin-safe-area": "4.0.0",
    "capacitor-secure-storage-plugin": "github:mytonwallet-org/capacitor-secure-storage-plugin#cd8b688d4104017133fc265d0f5cf2159ddc062a",
    "cordova-plugin-inappbrowser": "github:mytonwalletorg/cordova-plugin-inappbrowser#aaff95da46d53fd28d80fabd2b2a21e0844b93d3",
    "create-hmac": "1.1.7",
    "dexie": "4.0.11",
    "electron-conf": "1.3.0",
    "fflate": "0.8.2",
    "idb-keyval": "6.2.2",
    "qr-code-styling": "github:mytonwallet-org/qr-code-styling#671f29cc908681b5f5c7979fd418ff1fdf30ca9f",
    "qrcode-generator": "1.4.4",
    "stream-browserify": "3.0.0",
    "tonapi-sdk-js": "2.0.11",
    "tonweb-mnemonic": "1.0.1",
    "tronweb": "6.0.0",
    "tweetnacl": "1.0.3",
    "v8-compile-cache": "2.4.0",
    "webextension-polyfill": "0.12.0"
  }
}

{
  "$schema": "https://json.schemastore.org/package.json",
  "name": "ultimate-node-professional",
  "version": "5.0.0",
  "private": true,
  "description": "Enterprise-grade Node.js full-stack development toolkit with microservices, serverless, and AI capabilities",
  "main": "server.js",
  "type": "module",
  "packageManager": "pnpm@8.6.12",
  "scripts": {
    /* =============== CORE OPERATIONS =============== */
    "init": "node ./scripts/init.js",
    "start": "NODE_ENV=production node --trace-warnings --es-module-specifier-resolution=node --env-file=.env.production server.js",
    "dev": "NODE_ENV=development nodemon --trace-warnings --es-module-specifier-resolution=node --env-file=.env.development server.js",
    "stage": "NODE_ENV=staging node --env-file=.env.staging server.js",
    
    /* =============== BUILD SYSTEM =============== */
    "build": "npm-run-all build:*",
    "build:prod": "webpack --config webpack.config.prod.js --profile --json > stats.json",
    "build:dev": "webpack --config webpack.config.dev.js",
    "build:server": "swc src -d dist --config-file .swcrc",
    "build:types": "tsc --emitDeclarationOnly",
    "build:docker": "cross-env-shell docker buildx build --platform linux/amd64,linux/arm64 -t your-registry/{{name}}:{{version}} .",
    
    /* =============== DEVELOPMENT TOOLS =============== */
    "codegen": "graphql-codegen --config codegen.yml",
    "migrate": "knex migrate:latest && knex seed:run",
    "prisma:generate": "prisma generate",
    "prisma:migrate": "prisma migrate dev",
    "prisma:studio": "prisma studio",
    "storybook": "storybook dev -p 6006",
    
    /* =============== QUALITY & SECURITY =============== */
    "quality": "npm-run-all lint test security audit",
    "lint": "npm-run-all lint:*",
    "lint:js": "eslint . --ext .js,.jsx,.ts,.tsx,.mjs,.cjs --cache --max-warnings 0",
    "lint:css": "stylelint \"**/*.{css,scss,sass}\"",
    "lint:md": "markdownlint \"**/*.md\"",
    "lint:docker": "hadolint Dockerfile",
    "test": "npm-run-all test:*",
    "test:unit": "NODE_ENV=test jest --ci --coverage --detectOpenHandles",
    "test:e2e": "cypress run --config baseUrl=http://localhost:3000",
    "test:contract": "pact-js verify --publish",
    "test:load": "artillery run --output load-test.json load-test.yml",
    "security": "npm-run-all security:*",
    "security:scan": "snyk test --all-projects",
    "security:audit": "npm audit --production --audit-level=moderate",
    "audit": "npm-run-all audit:*",
    "audit:licenses": "license-checker --production --json --out licenses.json",
    "audit:size": "cost-of-modules --no-dev",
    "validate": "npm-run-all check-engines validate:*",
    "validate:types": "tsc --noEmit",
    "validate:packages": "pnpm why --recursive",
    
    /* =============== DEPLOYMENT & OPS =============== */
    "deploy": "npm-run-all build test security deploy:*",
    "deploy:prod": "serverless deploy --stage production",
    "deploy:stage": "serverless deploy --stage staging",
    "deploy:canary": "serverless deploy --stage canary --alias",
    "deploy:docker": "docker-compose --env-file .env.production up -d --build",
    "deploy:rollback": "serverless deploy --stage production --functionVersion $PREVIOUS_VERSION",
    "infra:plan": "cdktf diff",
    "infra:apply": "cdktf deploy --auto-approve",
    "logs": "pm2 logs",
    "metrics": "pm2 monit",
    
    /* =============== MONITORING & PERFORMANCE =============== */
    "perf": "npm-run-all perf:*",
    "perf:bench": "autocannon -c 100 -d 20 http://localhost:3000",
    "perf:profile": "NODE_ENV=production node --prof server.js",
    "perf:flame": "0x --visualize-cpu-profile isolate-0x*.cpuprofile",
    "perf:trace": "clinic flame -- node server.js",
    "perf:bundle": "source-map-explorer dist/static/js/*.js",
    
    /* =============== UTILITIES =============== */
    "clean": "rimraf dist coverage .cache .next node_modules",
    "reset": "npm-run-all clean install",
    "docs": "npm-run-all docs:*",
    "docs:api": "swagger-cli bundle api/swagger.json -o public/api-spec.json",
    "docs:jsdoc": "jsdoc -c jsdoc.config.json",
    "format": "prettier --write . && npm-run-all format:*",
    "format:css": "stylelint \"**/*.{css,scss,sass}\" --fix",
    "healthcheck": "node ./scripts/healthcheck.js"
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    },
    "husky": {
      "hooks": {
        "pre-commit": "lint-staged",
        "pre-push": "npm run test:unit",
        "commit-msg": "commitlint -E HUSKY_GIT_PARAMS"
      }
    },
    "lint-staged": {
      "*.{js,jsx,ts,tsx}": [
        "eslint --fix",
        "prettier --write"
      ],
      "*.{css,scss,sass}": [
        "stylelint --fix",
        "prettier --write"
      ],
      "*.json": [
        "prettier --write"
      ]
    }
  },
  "engines": {
    "node": ">=18.0.0 <21",
    "npm": ">=9.0.0",
    "pnpm": ">=8.0.0",
    "yarn": ">=1.22.0"
  },
  "volta": {
    "node": "18.17.1",
    "npm": "9.6.7",
    "yarn": "1.22.19",
    "pnpm": "8.6.12"
  },
  "dependencies": {
    /* =============== CORE INFRASTRUCTURE =============== */
    "express": "^4.18.2",
    "fastify": "^4.23.2",
    "nestjs": "^10.0.0",
    "hapi": "^21.3.2",
    "koa": "^2.15.3",
    "micro": "^9.3.4",
    
    /* =============== API GATEWAY & COMMUNICATION =============== */
    "graphql": "^16.8.1",
    "apollo-server": "^3.12.0",
    "trpc": "^11.0.0",
    "grpc": "^1.24.11",
    "ws": "^8.14.2",
    "socket.io": "^4.7.2",
    "nats": "^2.16.0",
    "kafkajs": "^2.2.4",
    
    /* =============== DATABASE & ORMS =============== */
    "mongoose": "^8.0.3",
    "typeorm": "^0.3.17",
    "sequelize": "^6.37.0",
    "prisma": "^5.3.1",
    "dynamodb-toolkit": "^3.4.1",
    "redis-om": "^0.4.0",
    "neogma": "^2.7.0",
    
    /* =============== SECURITY =============== */
    "helmet": "^7.1.0",
    "csurf": "^1.11.0",
    "rate-limiter-flexible": "^2.4.1",
    "express-brute": "^1.0.1",
    "bcryptjs": "^2.4.3",
    "jsonwebtoken": "^9.0.2",
    "passport": "^0.7.0",
    "oauth2-server": "^3.1.1",
    "arktype": "^1.0.24-alpha",
    
    /* =============== FRONTEND & SSR =============== */
    "next": "^14.0.0",
    "react": "^18.2.0",
    "vue": "^3.3.0",
    "svelte": "^4.2.0",
    "solid-js": "^1.7.5",
    "astro": "^3.0.0",
    "remix": "^2.0.0",
    "nuxt": "^3.8.0",
    
    /* =============== STATE MANAGEMENT =============== */
    "redux": "^4.2.1",
    "zustand": "^4.4.0",
    "mobx": "^6.10.0",
    "jotai": "^2.0.3",
    "xstate": "^5.0.0",
    
    /* =============== STYLING =============== */
    "tailwindcss": "^3.3.0",
    "styled-components": "^6.0.8",
    "emotion": "^11.11.0",
    "sass": "^1.69.0",
    "less": "^4.1.3",
    "postcss": "^8.4.31",
    
    /* =============== UTILITIES =============== */
    "lodash": "^4.17.21",
    "ramda": "^0.29.0",
    "fp-ts": "^2.16.3",
    "effect": "^2.3.0",
    "date-fns": "^2.30.0",
    "luxon": "^3.4.0",
    "zod": "^3.22.0",
    "joi": "^17.10.0",
    "class-validator": "^0.14.0",
    
    /* =============== AI & ML =============== */
    "langchain": "^0.0.208",
    "huggingface": "^2.5.3",
    "llama-index": "^0.3.12",
    "tensorflow": "^4.10.0",
    "brain.js": "^2.0.0",
    "onnxruntime-node": "^1.16.0",
    
    /* =============== SERVERLESS =============== */
    "serverless": "^3.35.1",
    "aws-sdk": "^2.1477.0",
    "serverless-offline": "^12.0.4",
    "azure-functions": "^3.7.0",
    "google-cloud": "^5.8.3",
    
    /* =============== DEBUGGING & OBSERVABILITY =============== */
    "winston": "^3.10.0",
    "pino": "^8.16.0",
    "bunyan": "^1.8.15",
    "opentelemetry": "^1.16.0",
    "newrelic": "^10.3.0",
    "sentry": "^7.84.0",
    "datadog": "^3.27.0",
    
    /* =============== PERFORMANCE =============== */
    "undici": "^5.23.0",
    "lru-cache": "^10.1.0",
    "hast-util-from-html": "^2.0.0",
    "fast-json-stringify": "^5.7.0",
    "msgpackr": "^1.8.4"
  },
  "devDependencies": {
    /* =============== BUILD TOOLS =============== */
    "webpack": "^5.89.0",
    "vite": "^4.4.9",
    "esbuild": "^0.19.5",
    "swc": "^1.3.82",
    "rollup": "^3.29.4",
    "parcel": "^2.10.0",
    "babel": "^7.23.0",
    
    /* =============== TESTING =============== */
    "jest": "^29.7.0",
    "mocha": "^10.2.0",
    "cypress": "^13.2.0",
    "playwright": "^1.39.0",
    "supertest": "^6.3.3",
    "testcontainers": "^9.6.0",
    "pact": "^10.3.5",
    "nock": "^13.3.0",
    
    /* =============== CODE QUALITY =============== */
    "eslint": "^8.56.0",
    "prettier": "^3.2.4",
    "stylelint": "^15.10.3",
    "typescript": "^5.3.2",
    "ts-node": "^10.9.1",
    "typedoc": "^0.25.0",
    "markdownlint": "^0.31.1",
    "commitlint": "^17.7.1",
    
    /* =============== DEPLOYMENT & OPS =============== */
    "pm2": "^5.3.1",
    "dockerfilelint": "^1.8.0",
    "hadolint": "^2.12.0",
    "cdktf": "^0.19.0",
    "pulumi": "^3.90.0",
    "terraform": "^1.6.0",
    "serverless-compose": "^1.4.0",
    
    /* =============== AUTOMATION & DX =============== */
    "husky": "^8.0.3",
    "lint-staged": "^15.0.2",
    "npm-run-all": "^4.1.5",
    "concurrently": "^8.2.1",
    "cross-env": "^7.0.3",
    "nodemon": "^3.0.2",
    "tsx": "^4.5.1",
    
    /* =============== DOCUMENTATION =============== */
    "swagger-cli": "^4.0.4",
    "jsdoc": "^4.0.2",
    "storybook": "^7.5.3",
    "docusaurus": "^3.0.0",
    
    /* =============== SECURITY TOOLS =============== */
    "snyk": "^1.1239.0",
    "license-checker": "^25.0.1",
    "cost-of-modules": "^0.2.2",
    "npm-audit-resolver": "^4.0.0"
  },
  "bundles": {
    "microservices": [
      "nestjs",
      "kafkajs",
      "typeorm",
      "opentelemetry"
    ],
    "serverless": [
      "serverless",
      "aws-sdk",
      "serverless-offline",
      "middy"
    ],
    "monolith": [
      "express",
      "mongoose",
      "redis-om",
      "helmet"
    ],
    "frontend": [
      "next",
      "react",
      "tailwindcss",
      "zustand"
    ],
    "ai": [
      "langchain",
      "tensorflow",
      "huggingface",
      "llama-index"
    ]
  },
  "publishConfig": {
    "access": "public",
    "registry": "https://registry.npmjs.org/"
  }
}
{
	"name": "web3.js",
	"private": true,
	"description": "Ethereum API wrappers and utilities",
	"author": "ChainSafe Systems",
	"license": "LGPL-3.0",
	"keywords": [
		"ethereum",
		"eth",
		"web3",
		"web3js",
		"web3.js",
		"blockchain"
	],
	"homepage": "https://github.com/ChainSafe/web3.js#readme",
	"repository": {
		"type": "git",
		"url": "git+https://github.com/ChainSafe/web3.js.git"
	},
	"bugs": {
		"url": "https://github.com/ChainSafe/web3.js/issues"
	},
	"engines": {
		"node": ">=14",
		"npm": ">=6.12.0"
	},
	"workspaces": {
		"packages": [
			"packages/*",
			"tools/*"
		]
	},
	"lint-staged": {
		"*.{js,jsx,ts,tsx,css,md}": "prettier --write"
	},
	"scripts": {
		"version": "yarn run bootstrap && yarn build",
		"bootstrap": "lerna bootstrap",
		"prebuild": "yarn clean && ts-node scripts/init.ts",
		"build": "lerna run build --stream",
		"build:types": "lerna run build:types --stream",
		"build:cjs": "lerna run build:cjs --stream",
		"build:esm": "lerna run build:esm --stream",
		"build:web": "lerna run build:web --stream",
		"build:web:analyze": "lerna run build:web:analyze --stream",
		"generate:docs": "node ./scripts/docshelper/generatedoc.js",
		"build:docs": "yarn generate:docs && cd docs && yarn install && yarn build",
		"changelog": "ts-node -P scripts/changelog/tsconfig.json scripts/changelog/src/index.ts",
		"clean": "lerna run clean --stream --parallel",
		"geth:start": "WEB3_SYSTEM_TEST_BACKEND=geth && ./scripts/geth.sh start",
		"geth:start:background": "WEB3_SYSTEM_TEST_BACKEND=geth && ./scripts/geth.sh start 1",
		"geth:stop": "./scripts/geth.sh stop",
		"geth-binary:start": "WEB3_SYSTEM_TEST_BACKEND=geth && ./scripts/geth_binary.sh start",
		"geth-binary:start:background": "WEB3_SYSTEM_TEST_BACKEND=geth && ./scripts/geth_binary.sh start 1",
		"geth-binary:stop": "WEB3_SYSTEM_TEST_BACKEND=geth && ./scripts/geth_binary.sh stop",
		"hardhat:start": "WEB3_SYSTEM_TEST_BACKEND=hardhat && ./scripts/hardhat.sh start",
		"hardhat:stop": "./scripts/hardhat.sh stop",
		"geth-manual:start:background": "WEB3_SYSTEM_TEST_BACKEND=geth && ./scripts/geth_binary.sh manualStart 1",
		"geth-manual:stop": "WEB3_SYSTEM_TEST_BACKEND=geth && ./scripts/geth_binary.sh stop",
		"lint": "lerna run lint --stream --parallel",
		"lint:fix": "lerna run lint:fix --stream --parallel",
		"format": "lerna run format --stream --parallel && prettier --write ./scripts/**/*.ts",
		"test": "lerna run test --stream --parallel",
		"test:coverage:unit": "lerna run test:coverage:unit --stream --parallel",
		"test:coverage:integration": "lerna run test:coverage:integration --stream --parallel",
		"test:unit": "lerna run test:unit --stream --parallel && jest --config=./scripts/jest.config.js",
		"test:integration": "lerna run test:integration --stream",
		"test:benchmark": "lerna run test:benchmark",
		"test:integration:stress": "lerna run test:integration:stress --stream",
		"test:e2e:geth:http": "./scripts/test-runner.sh geth http",
		"test:e2e:geth:ws": "./scripts/test-runner.sh geth ws",
		"test:e2e:geth:ipc": "./scripts/test-runner.sh geth ipc",
		"test:e2e:hardhat:http": "./scripts/test-runner.sh hardhat http",
		"test:e2e:coverage": "./scripts/test-runner.sh coverage",
		"test:e2e:mainnet:http": "./scripts/test-runner.sh mainnet http",
		"test:e2e:mainnet:ws": "./scripts/test-runner.sh mainnet ws",
		"test:e2e:sepolia:http": "./scripts/test-runner.sh sepolia http",
		"test:e2e:sepolia:ws": "./scripts/test-runner.sh sepolia ws",
		"test:stress:geth:ws": "./scripts/test-runner.sh geth-manual ws node manual",
		"test:stress:geth:ipc": "./scripts/test-runner.sh geth-manual ipc node manual",
		"test:stress:geth:http": "./scripts/test-runner.sh geth-manual http node manual",
		"test:e2e:stress:geth:ws:chrome": "./scripts/test-runner.sh geth-manual ws chrome manual",
		"generate:accounts": "node ./scripts/gen_accounts.js",
		"pre-blackbox": "yarn config set registry http://localhost:4873 && git init && git config --global user.email \"ci@github.com\" && git config --global user.name \"CI\"",
		"post-blackbox": "./scripts/verdaccio.sh stop",
		"post-blackbox:geth": "yarn geth:stop && yarn post-blackbox",
		"test:blackbox:geth:http": "yarn pre-blackbox && yarn geth:start:background && ./scripts/verdaccio.sh startBackgroundAndPublish && lerna run test:blackbox:geth:http --stream && yarn post-blackbox:geth",
		"test:blackbox:geth:ws": "yarn pre-blackbox && yarn geth:start:background && ./scripts/verdaccio.sh startBackgroundAndPublish && lerna run test:blackbox:geth:ws --stream && yarn post-blackbox:geth",
		"test:e2e:geth:ws:electron": "./scripts/test-runner.sh hardhat ws electron",
		"test:e2e:geth:ws:chrome": "./scripts/test-runner.sh hardhat ws chrome",
		"test:e2e:geth:ws:firefox": "./scripts/test-runner.sh hardhat ws firefox",
		"test:e2e:hardhat:ws:electron": "./scripts/test-runner.sh hardhat http electron",
		"test:e2e:hardhat:ws:chrome": "./scripts/test-runner.sh hardhat http chrome",
		"test:e2e:hardhat:ws:firefox": "./scripts/test-runner.sh hardhat http firefox",
		"test:blackbox:infura:http": "yarn pre-blackbox && ./scripts/verdaccio.sh startBackgroundAndPublish && lerna run test:blackbox:infura:http --stream && yarn post-blackbox",
		"test:blackbox:infura:ws": "yarn pre-blackbox && ./scripts/verdaccio.sh startBackgroundAndPublish && lerna run test:blackbox:infura:ws --stream && yarn post-blackbox",
		"test:manual:long-connection-ws": "node packages/web3/test/stress/long_ws_tests/nodejs_test/long_connection_ws.js",
		"test:stress": "yarn test:stress:geth:ws && yarn test:stress:geth:http && yarn test:stress:geth:ipc && yarn test:e2e:stress:geth:ws:chrome",
		"postinstall": "yarn build",
		"compile:contracts": "node ./scripts/compile_contracts.js && yarn format && yarn lint:fix",
		"publish:canary": "lerna publish --canary --dist-tag dev --preid dev.$(git rev-parse --short HEAD) --exact --graph-type all --force-publish \"*\" --no-verify-access --yes",
		"prepare": "husky install"
	},
	"devDependencies": {
		"@cypress/webpack-preprocessor": "^5.12.0",
		"@droppedcode/typedoc-plugin-relative-includes": "^1.0.2",
		"@openzeppelin/contracts": "^4.7.1",
		"@types/node": "^18.11.9",
		"@types/webpack": "^5.28.0",
		"assert": "^2.0.0",
		"buffer": "^6.0.3",
		"bufferutil": "^4.0.6",
		"clean-webpack-plugin": "^4.0.0",
		"concurrently": "^8.2.0",
		"cypress-jest-adapter": "^0.1.1",
		"declaration-bundler-webpack-plugin": "^1.0.3",
		"eslint": "^8.20.0",
		"eslint-import-resolver-typescript": "^3.5.5",
		"eslint-plugin-require-extensions": "^0.1.3",
		"http-browserify": "^1.7.0",
		"https-browserify": "^1.0.0",
		"husky": "^8.0.3",
		"jest": "^29.7.0",
		"lerna": "^6.6.2",
		"lint-staged": "^15.2.9",
		"npm-auth-to-token": "^1.0.0",
		"prettier": "^2.7.1",
		"prettier-plugin-solidity": "^1.0.0-beta.20",
		"process": "^0.11.10",
		"solc": "^0.8.15",
		"ts-jest": "^29.1.1",
		"ts-loader": "^9.3.1",
		"ts-node": "^10.9.1",
		"typedoc": "^0.25.6",
		"typedoc-monorepo-link-types": "^0.0.4",
		"typedoc-plugin-extras": "^2.2.5",
		"typedoc-plugin-markdown": "^3.17.0",
		"typedoc-plugin-mdn-links": "^2.0.0",
		"typedoc-plugin-merge-modules": "^5.1.0",
		"typescript": "^5.5.4",
		"utf-8-validate": "^5.0.9",
		"web3-hardhat-plugin": "^1.0.0",
		"webpack": "^5.73.0",
		"webpack-cli": "^4.10.0"
	},
	"packageManager": "yarn@1.22.15",
	"dependencies": {
		"webpack-bundle-analyzer": "^4.7.0"
	}
}
